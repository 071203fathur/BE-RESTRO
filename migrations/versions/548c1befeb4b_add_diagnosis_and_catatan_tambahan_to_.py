"""Add diagnosis and catatan_tambahan to PatientProfile and status to ProgramRehabilitasi

Revision ID: 548c1befeb4b
Revises: 57492ae4621a
Create Date: 2025-06-05 21:21:13.064995 # Atau tanggal pembuatan aslinya

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '548c1befeb4b'
down_revision = '57492ae4621a' # Ini harus sesuai dengan file Anda
branch_labels = None
depends_on = None

# Definisikan nama tipe ENUM dan nilai-nilainya
# PENTING: Nilai ini HARUS SAMA PERSIS (termasuk case) dengan yang ada di
# class ProgramStatus(str, enum.Enum) di file models.py Anda.
# Jika di model.py Anda 'belum_dimulai', maka di sini juga 'belum_dimulai'.
program_status_enum_name = 'programstatus'
program_status_enum_values = ('belum_dimulai', 'berjalan', 'selesai', 'dibatalkan')


def upgrade():
    # ### commands auto generated by Alembic - JANGAN HAPUS BAGIAN INI, kita akan menyisipkan ###

    # 1. Buat tipe ENUM 'programstatus' di PostgreSQL secara eksplisit SEBELUM menambah kolom
    # Pastikan nilai enum di sini (lowercase) sesuai dengan definisi di models.py
    sql_enum_values_string = ", ".join([f"'{val}'" for val in program_status_enum_values])
    op.execute(f"CREATE TYPE {program_status_enum_name} AS ENUM ({sql_enum_values_string});")

    # Perubahan yang sudah ada dari auto-generate (kita pertahankan)
    with op.batch_alter_table('laporan_rehabilitasi', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_laporan_rehabilitasi_pasien_id'), ['pasien_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_laporan_rehabilitasi_program_rehabilitasi_id'), ['program_rehabilitasi_id'], unique=False)

    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('diagnosis', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('catatan_tambahan', sa.Text(), nullable=True))
        # Jika unique constraint untuk nomor_telepon sudah ada dari migrasi sebelumnya,
        # baris create_unique_constraint ini mungkin menyebabkan error jika dijalankan lagi.
        # Cek apakah unique constraint sudah ada di tabel patient_profiles untuk kolom nomor_telepon.
        # Jika sudah, Anda bisa menghapus atau memberi komentar pada baris di bawah ini.
        # Namun, jika ini adalah migrasi pertama yang menambahkannya, biarkan.
        # Untuk aman, kita bisa coba membuatnya dan abaikan jika sudah ada (tergantung implementasi Alembic)
        # atau tambahkan `if_not_exists=True` jika didukung, atau cek manual.
        # Untuk sekarang, kita biarkan seperti auto-generated. Jika error, ini bisa jadi penyebab.
        batch_op.create_unique_constraint('uq_patient_profiles_nomor_telepon', ['nomor_telepon'])


    with op.batch_alter_table('program_rehabilitasi', schema=None) as batch_op:
        # 2. Tambahkan kolom 'status' menggunakan tipe ENUM yang baru dibuat
        # Gunakan native_enum=True dan nama tipe yang sama
        batch_op.add_column(sa.Column('status', 
                                      sa.Enum(*program_status_enum_values, name=program_status_enum_name, native_enum=True), 
                                      nullable=False, 
                                      server_default='belum_dimulai')) # Default value harus salah satu dari enum values
        batch_op.create_index(batch_op.f('ix_program_rehabilitasi_status'), ['status'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        # Perubahan ini mungkin terkait dengan bagaimana Alembic menangani penamaan constraint.
        # Jika sebelumnya unique constraint dibuat tanpa nama eksplisit oleh Flask-SQLAlchemy,
        # Alembic mungkin mencoba 'mengatur ulang' dengan nama yang lebih eksplisit.
        # Periksa apakah users_email_key dan users_username_key memang constraint yang ada.
        # Jika ini menyebabkan error, mungkin constraint lama tidak ada atau namanya berbeda.
        
        # Coba drop constraint jika ada (gunakan try-except atau cek dulu)
        try:
            # Jika nama constraint dari Alembic sebelumnya berbeda, ganti 'users_email_key' dengan nama yang benar
            batch_op.drop_constraint('users_email_key', type_='unique') 
        except Exception:
            pass # Abaikan jika tidak ada atau nama berbeda
        try:
            batch_op.drop_constraint('users_username_key', type_='unique')
        except Exception:
            pass # Abaikan jika tidak ada atau nama berbeda
            
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - JANGAN HAPUS BAGIAN INI ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        # Membuat ulang unique constraint seperti sebelumnya (jika memang ada dan namanya benar)
        # Nama 'users_username_key' dan 'users_email_key' mungkin perlu disesuaikan
        # jika nama aslinya berbeda.
        batch_op.create_unique_constraint('users_username_key', ['username'])
        batch_op.create_unique_constraint('users_email_key', ['email'])


    with op.batch_alter_table('program_rehabilitasi', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_program_rehabilitasi_status'))
        batch_op.drop_column('status')

    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        # Pastikan nama constraint yang di-drop benar. 
        # 'None' sebagai nama constraint mungkin tidak selalu benar, bisa jadi ada nama generated.
        # Jika ini menyebabkan error, Anda perlu mencari nama constraint unik untuk nomor_telepon
        # dan men-dropnya secara eksplisit.
        batch_op.drop_constraint('uq_patient_profiles_nomor_telepon', type_='unique') # Ganti 'None' dengan nama constraint jika diketahui
        batch_op.drop_column('catatan_tambahan')
        batch_op.drop_column('diagnosis')

    with op.batch_alter_table('laporan_rehabilitasi', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_laporan_rehabilitasi_program_rehabilitasi_id'))
        batch_op.drop_index(batch_op.f('ix_laporan_rehabilitasi_pasien_id'))

    # Hapus tipe ENUM 'programstatus' dari PostgreSQL SAAT downgrade
    op.execute(f"DROP TYPE IF EXISTS {program_status_enum_name};")
    # ### end Alembic commands ###
