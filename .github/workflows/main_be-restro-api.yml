# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - be-restro-api

on:
  push:
    branches:
      - main # Anda bisa tambahkan branch lain jika diperlukan (misal: develop)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Pastikan versi Python ini sama dengan yang di App Service

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      # --- Langkah baru: Setup Python dan Install Dependensi untuk Migrasi di Runner ---
      # Ini diperlukan agar runner bisa menjalankan flask db upgrade secara langsung
      - name: Set up Python for deploy job
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Pastikan versi Python ini sama dengan yang di build job dan App Service

      - name: Install database migration dependencies for runner
        # Menginstal semua dependensi dari requirements.txt, termasuk Alembic dan Psycopg2
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 

      # --- Langkah baru: Buat script Python untuk menjalankan migrasi ---
      # Script ini akan memanggil Alembic secara programatik
      - name: Create run_migrations.py script
        run: |
          echo "import os" > run_migrations.py
          echo "from alembic.config import Config" >> run_migrations.py
          echo "from alembic import command" >> run_migrations.py
          echo "from dotenv import load_dotenv" >> run_migrations.py
          echo "" >> run_migrations.py
          echo "def run_alembic_upgrade():" >> run_migrations.py
          echo "    database_url = os.getenv('DATABASE_URL')" >> run_migrations.py
          echo "    if not database_url:" >> run_migrations.py
          echo "        raise ValueError('DATABASE_URL environment variable is not set. Cannot run migrations.')" >> run_migrations.py
          echo "" >> run_migrations.py
          echo "    # PERBAIKAN: Set script_location secara eksplisit" >> run_migrations.py
          echo "    alembic_cfg = Config('alembic.ini')" >> run_migrations.py
          echo "    # Set script_location ke path relatif dari direktori proyek ke folder migrations" >> run_migrations.py
          echo "    # Asumsi alembic.ini dan folder migrations ada di root proyek" >> run_migrations.py
          echo "    alembic_cfg.set_main_option('script_location', 'migrations')" >> run_migrations.py # <--- TAMBAH INI
          echo "" >> run_migrations.py
          echo "    alembic_cfg.set_main_option('sqlalchemy.url', database_url)" >> run_migrations.py
          echo "" >> run_migrations.py
          echo "    print(f'Running Alembic upgrade on: {database_url}')" >> run_migrations.py
          echo "    command.upgrade(alembic_cfg, 'head')" >> run_migrations.py
          echo "    print('Alembic upgrade completed successfully.')" >> run_migrations.py
          echo "" >> run_migrations.py
          echo "if __name__ == '__main__':" >> run_migrations.py
          echo "    try:" >> run_migrations.py
          echo "        run_alembic_upgrade()" >> run_migrations.py
          echo "    except Exception as e:" >> run_migrations.py
          echo "        print(f'Error during Alembic upgrade: {e}')" >> run_migrations.py
          echo "        import sys" >> run_migrations.py
          echo "        sys.exit(1)" >> run_migrations.py


      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_89B1EA6FC8A7461F8452A0B63808CE6D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C363485F2C2642C38010965BB0B371C5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A83469A03A344DF8AA3A88543CB7D6A6 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'be-restro-api' # Ganti dengan nama App Service Anda jika berbeda
          slot-name: 'Production'
          # Jika Anda mengunggah file zip, Anda perlu menyertakan package: 'release.zip'
          # Jika tidak, biarkan kosong untuk default yang mengambil dari root repo

      # --- LANGKAH PENTING BARU: Jalankan Migrasi Database secara Langsung dari Runner ---
      - name: 'Run Database Migrations Directly from Runner'
        run: python run_migrations.py
        env:
          # Pastikan DATABASE_URL ini adalah secrets.AZURE_POSTGRES_DATABASE_URL
          # Anda perlu menambahkan secrets.AZURE_POSTGRES_DATABASE_URL sebagai GitHub Secret.
          DATABASE_URL: ${{ secrets.AZURE_POSTGRES_DATABASE_URL }}
      
      # --- Opsional: Pastikan App Service dimulai ulang jika migrasi mengubah dependensi ---
      # Ini tetap direkomendasikan setelah migrasi yang mengubah skema DB
      - name: 'Restart App Service (Optional but Recommended)'
        uses: azure/cli@v1 # Menggunakan Azure CLI untuk menjalankan perintah restart
        with:
          inlineScript: |
            echo "Restarting App Service..."
            az webapp restart --name 'be-restro-api' --resource-group 'RG-RestroApp'
            echo "App Service restart command sent."

